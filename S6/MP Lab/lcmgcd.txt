//LCM & GCD


DATA    SEGMENT

MSG1    DB      0ah,0dh,"Enter the first number: $"
MSG2    DB      0ah,0dh,"Enter the second number: $"
MSG3    DB      0ah,0dh,"GCD of the numbers: $"
MSG4    DB      0ah,0dh,"LCM of the numbers: $"
NUM1	DW	0
NUM2	DW	0
NUM3	DW	0
NUM4	DW	0
NUM5	DW	0

DATA    ENDS

CODE    SEGMENT
ASSUME  CS:CODE,DS:DATA
START:
        MOV     AX,DATA
        MOV     DS,AX
        LEA     DX,MSG1
        MOV	AH,09H
	INT	21H

        CALL	INPUT
	MOV	NUM1,AX
	LEA	DX,MSG2
	MOV	AH,09H
	INT 	21H

	CALL	INPUT
	MOV	NUM2,AX
	MOV	BX,NUM2
	MOV	CX,NUM1

	CALL	GCD
	LEA	DX,MSG3
	MOV	AH,09H
	INT	21H

	MOV	AX,NUM4

	CALL	OUTPUT
	MOV	BX,NUM1
	MOV	CX,NUM2

	CALL	LCM
	LEA	DX,MS4
	MOV	AH,09H
	INT	21H
	MOV	AX,NUM3
	CALL	OUTPUT
	MOV	AH,4CH
	INT	21H

	LCM	PROC NEAR
	RPTS:
	CMP	BX,CX
	JE	STOREL
	JNC	SKIPL
	XCHG	BX,CX

	SKIPL:
	MOV	NUM5,BX
	
	RS:
	MOV	DX,000H
	MOV	AX,BX
	DIV	CX
	CMP	DX,000H
	JE	STOREL
	ADD	BX,NUM5

	STOREL:
	MOV	NUM3,BX
	RET
	LCM	ENDP

	GCD	PROC NEAR
	RPT:
	CMP	BX,CX
	JE	STORE
	JNC	SKIP
	XCHG	BX,CX
	SKIP:
	MOV	DX,000H
	MOV	AX,BX
	DIV	CX
	CMP	DX,000H
	JE	STORE
	MOV	BX,CX
	MOV	CX,DX
	JMP	RPT

	STORE:
	MOV	NUM4,CX
	RET
	GCD	ENDP

	INPUT	PROC NEAR
	MOV	BX,000H
	REPEAT1:
	MOV	AH,01H
	INT	21H
	MOV	AH,00H
	CMP	AL,' '
	JE	STORE2
	SUB	AX,30H
	MOV	BP,AX
	MUL	BX
	ADD	AX,BP
	MOV	BX,AX
	JMP	REPEAT1

	STORE2:
	MOV	AX,BX
	RET

	INPUT	ENDP
	OUTPUT	PROC NEAR
	MOV	BP,000H
	ORPT:
	MOV	BX,000AH
	MOV	DX,0000H
	DIV	BX
	PUSH	DX
	INC	BP
	CMP	AX,000H
	JNE	ORPT

	RPT2:
	POP	AX
	ADD	AX,30H
	MOV	DX,AX
	MOV	AH,02H
	INT	21H
	DEC	BP
	CMP	BP,0000H
	JNE	RPT2
	RET

OUTPUT ENDP
CODE ENDS
END START

